<!-- ++++++++++++++++++++++ansible-managed-file+++++++++++++++++++++++++++++++++

                             IMPORTANT WARNING

   This file is managed remotely by Ansible orchestration tool. Any local
   changes will be overwritten without any notice !!! You have been warned !!!

+++++++++++++++++++++++++++ansible-managed-file+++++++++++++++++++++++++++++ -->

<SPConfig xmlns="urn:mace:shibboleth:2.0:native:sp:config"
    xmlns:conf="urn:mace:shibboleth:2.0:native:sp:config"
    xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"
    xmlns:samlp="urn:oasis:names:tc:SAML:2.0:protocol"
    xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"
    clockSkew="180">

    <!--
    By default, in-memory StorageService, ReplayCache, ArtifactMap, and SessionCache
    are used. See example-shibboleth2.xml for samples of explicitly configuring them.
    -->

    <!--
    To customize behavior for specific resources on Apache, and to link vhosts or
    resources to ApplicationOverride settings below, use web server options/commands.
    See https://spaces.internet2.edu/display/SHIB2/NativeSPConfigurationElements for help.

    For examples with the RequestMap XML syntax instead, see the example-shibboleth2.xml
    file, and the https://spaces.internet2.edu/display/SHIB2/NativeSPRequestMapHowTo topic.
    -->

    <!-- The ApplicationDefaults element is where most of Shibboleth's SAML bits are defined. -->
    <ApplicationDefaults entityID="https://{{ ansible_fqdn }}/shibboleth"
                         REMOTE_USER="eppn eduPersonUniqueId persistent-id targeted-id">

        <!--
        Controls session lifetimes, address checks, cookie handling, and the protocol handlers.
        You MUST supply an effectively unique handlerURL value for each of your applications.
        The value defaults to /Shibboleth.sso, and should be a relative path, with the SP computing
        a relative value based on the virtual host. Using handlerSSL="true", the default, will force
        the protocol to be https. You should also add a cookieProps setting of "; path=/; secure"
        in that case. Note that while we default checkAddress to "false", this has a negative
        impact on the security of the SP. Stealing cookies/sessions is much easier with this disabled.
        -->
        <!-- <Sessions lifetime="28800" timeout="3600" checkAddress="false" relayState="ss:mem" handlerSSL="false"> -->
        <Sessions lifetime="28800" timeout="3600" checkAddress="false" consistentAddress="true"
                  handlerURL="/Shibboleth.sso" handlerSSL="true"
                  cookieProps="; path=/; secure"
                  idpHistory="false" idpHistoryDays="7">

            <!--
            Configures SSO for a default IdP. To allow for >1 IdP, remove
            entityID property and adjust discoveryURL to point to discovery service.
            (Set discoveryProtocol to "WAYF" for legacy Shibboleth WAYF support.)
            You can also override entityID on /Login query string, or in RequestMap/htaccess.
            -->
            <!-- <SSO entityID="https://idp.example.org/shibboleth"
                 discoveryProtocol="SAMLDS" discoveryURL="https://ds.example.org/DS/WAYF">
              SAML2 SAML1
            </SSO> -->
            <!--<SSO discoveryProtocol="SAMLDS" discoveryURL="https://ds.eduid.cz/wayf.php?filter=eyJhbGxvd0hvc3RlbCI6IHRydWUsICJhbGxvd0hvc3RlbFJlZyI6IHRydWV9">-->
            <SSO discoveryProtocol="SAMLDS" discoveryURL="https://ds.eduid.cz/wayf.php?filter=eyJhbGxvd0ZlZWRzIjogWyJlZHVJRC5jeiJdLCAiYWxsb3dIb3N0ZWwiOiB0cnVlLCAiYWxsb3dIb3N0ZWxSZWciOiB0cnVlLCJhbGxvd1NvY2lhbCI6IGZhbHNlfQ==">
              SAML2 SAML1
            </SSO>

            <!-- SAML and local-only logout. -->
            <Logout>SAML2 Local</Logout>

            <!-- Extension service that generates "approximate" metadata based on SP configuration. -->
            <Handler type="MetadataGenerator" Location="/Metadata" signing="false" template="/etc/shibboleth/shibboleth_contact_template.xml"/>

            <!-- Status reporting service. -->
            <Handler type="Status" Location="/Status" acl="{{ site_users[primary_admin]['workstations'] | join(' ') }}"/>

            <!-- Session diagnostic service. -->
            <Handler type="Session" Location="/Session" showAttributeValues="false"/>

            <!-- JSON feed of discovery information. -->
            <Handler type="DiscoveryFeed" Location="/DiscoFeed"/>
        </Sessions>

        <!--
        Allows overriding of error template information/filenames. You can
        also add attributes with values that can be plugged into the templates.
        -->
        <Errors supportContact="webmaster@{{ ansible_fqdn }}"
            logoLocation="/shibboleth-sp/logo.jpg"
            styleSheet="/shibboleth-sp/main.css"/>

        <!-- Example of remotely supplied batch of signed metadata. -->
        <!--
        <MetadataProvider type="XML" uri="http://federation.org/federation-metadata.xml"
              backingFilePath="federation-metadata.xml" reloadInterval="7200">
            <MetadataFilter type="RequireValidUntil" maxValidityInterval="2419200"/>
            <MetadataFilter type="Signature" certificate="fedsigner.pem"/>
        </MetadataProvider>
        -->

        <!-- Example of locally maintained metadata. -->
        <!--
        <MetadataProvider type="XML" file="partner-metadata.xml"/>
        -->

        <MetadataProvider type="XML" uri="https://metadata.eduid.cz/entities/eduid+idp"
            backingFilePath="/var/cache/shibboleth/eduid-metadata.xml" reloadInterval="7200">
            <MetadataFilter type="Signature" certificate="/etc/ssl/metadata.eduid.cz.crt.pem"/>
        </MetadataProvider>

        <MetadataProvider type="XML" uri="https://metadata.cesnet.cz/entities/hostel"
                backingFilePath="/var/cache/shibboleth/hostel.xml" reloadInterval="1800">
            <MetadataFilter type="Signature" certificate="/etc/ssl/metadata.eduid.cz.crt.pem"/>
        </MetadataProvider>

        <!-- Map to extract attributes from SAML assertions. -->
        <AttributeExtractor type="XML" validate="true" path="attribute-map.xml"/>

        <!-- Use a SAML query if no attributes are supplied during SSO. -->
        <AttributeResolver type="Query" subjectMatch="true"/>

        <AttributeResolver type="SimpleAggregation" attributeId="eppn"
            format="urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified">
            <Entity>https://aa.cesnet.cz/idp/shibboleth</Entity>
            <MetadataProvider type="XML" uri="https://metadata.eduid.cz/entities/aa.cesnet.cz"
                backingFilePath="/var/cache/shibboleth/aa-cesnet-cz.xml" reloadInterval="600">
                <MetadataFilter type="Signature" certificate="/etc/ssl/metadata.eduid.cz.crt.pem" />
            </MetadataProvider>
        </AttributeResolver>

        <!-- Default filtering policy for recognized attributes, lets other data pass. -->
        <AttributeFilter type="XML" validate="true" path="attribute-policy.xml"/>

        <!-- Simple file-based resolver for using a single keypair. -->
        <CredentialResolver type="File" key="sp-key.pem" certificate="sp-cert.pem"/>

        <!--
        <CredentialResolver type="Chaining">
             <CredentialResolver type="File" keyName="Active"
                                 key="/etc/ssl/servercert/key.pem"
                                 certificate="/etc/ssl/servercert/cert.pem"/>
        </CredentialResolver>
        -->

        <!--
        The default settings can be overridden by creating ApplicationOverride elements (see
        the https://spaces.internet2.edu/display/SHIB2/NativeSPApplicationOverride topic).
        Resource requests are mapped by web server commands, or the RequestMapper, to an
        applicationId setting.

        Example of a second application (for a second vhost) that has a different entityID.
        Resources on the vhost would map to an applicationId of "admin":
        -->
        <!--
        <ApplicationOverride id="admin" entityID="https://admin.example.org/shibboleth"/>
        -->
    </ApplicationDefaults>

    <!-- Policies that determine how to process and authenticate runtime messages. -->
    <SecurityPolicyProvider type="XML" validate="true" path="security-policy.xml"/>

    <!-- Low-level configuration about protocols and bindings available for use. -->
    <ProtocolProvider type="XML" validate="true" reloadChanges="false" path="protocols.xml"/>

</SPConfig>
